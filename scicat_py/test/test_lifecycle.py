# coding: utf-8

"""
    Dacat API

    SciCat backend API  # noqa: E501

    The version of the OpenAPI document: 4.0.0
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import datetime
import unittest

import scicat_py
from scicat_py.models.lifecycle import Lifecycle  # noqa: E501
from scicat_py.rest import ApiException


class TestLifecycle(unittest.TestCase):
    """Lifecycle unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test Lifecycle
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = scicat_py.models.lifecycle.Lifecycle()  # noqa: E501
        if include_optional :
            return Lifecycle(
                archivable = True, 
                retrievable = True, 
                publishable = True, 
                date_of_disk_purging = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                archive_retention_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                date_of_publishing = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                published_on = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                is_on_central_disk = True, 
                archive_status_message = '0', 
                retrieve_status_message = '0', 
                archive_return_message = None, 
                retrieve_return_message = None, 
                exported_to = '0', 
                retrieve_integrity_check = True
            )
        else :
            return Lifecycle(
        )

    def testLifecycle(self):
        """Test Lifecycle"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
