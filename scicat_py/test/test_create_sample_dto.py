# coding: utf-8

"""
    Dacat API

    SciCat backend API  # noqa: E501

    The version of the OpenAPI document: 4.0.0
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import datetime
import unittest

import scicat_py
from scicat_py.models.create_sample_dto import CreateSampleDto  # noqa: E501
from scicat_py.rest import ApiException


class TestCreateSampleDto(unittest.TestCase):
    """CreateSampleDto unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test CreateSampleDto
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = scicat_py.models.create_sample_dto.CreateSampleDto()  # noqa: E501
        if include_optional :
            return CreateSampleDto(
                owner_group = '0', 
                access_groups = [
                    '0'
                    ], 
                created_by = '0', 
                updated_by = '0', 
                owner = '0', 
                description = '0', 
                created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                sample_characteristics = None, 
                is_published = True
            )
        else :
            return CreateSampleDto(
                owner_group = '0',
                access_groups = [
                    '0'
                    ],
                created_by = '0',
                updated_by = '0',
                owner = '0',
                description = '0',
                created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                sample_characteristics = None,
                is_published = True,
        )

    def testCreateSampleDto(self):
        """Test CreateSampleDto"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
