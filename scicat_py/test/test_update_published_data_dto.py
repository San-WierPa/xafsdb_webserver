# coding: utf-8

"""
    Dacat API

    SciCat backend API  # noqa: E501

    The version of the OpenAPI document: 4.0.0
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import datetime
import unittest

import scicat_py
from scicat_py.models.update_published_data_dto import (
    UpdatePublishedDataDto,
)  # noqa: E501
from scicat_py.rest import ApiException


class TestUpdatePublishedDataDto(unittest.TestCase):
    """UpdatePublishedDataDto unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test UpdatePublishedDataDto
        include_option is a boolean, when False only required
        params are included, when True both required and
        optional params are included"""
        # model = scicat_py.models.update_published_data_dto.UpdatePublishedDataDto()  # noqa: E501
        if include_optional:
            return UpdatePublishedDataDto(
                id="0",
                doi="0",
                affiliation="0",
                creator=["0"],
                publisher="0",
                publication_year=1.337,
                title="0",
                url="0",
                abstract="0",
                data_description="0",
                resource_type="0",
                number_of_files=1.337,
                size_of_archive=1.337,
                pid_array=["0"],
                authors=["0"],
                registered_time=datetime.datetime.strptime(
                    "2013-10-20 19:20:30.00", "%Y-%m-%d %H:%M:%S.%f"
                ),
                status="0",
                scicat_user="0",
                thumbnail="0",
                related_publications=["0"],
                download_link="0",
            )
        else:
            return UpdatePublishedDataDto()

    def testUpdatePublishedDataDto(self):
        """Test UpdatePublishedDataDto"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == "__main__":
    unittest.main()
